{"version":3,"sources":["components/ListItems.js","components/Home.js","components/SearchResults.js","components/Nominate.js","components/Nominations.js","App.js","serviceWorker.js","index.js"],"names":["ListItemLink","renderLink","itemProps","react_default","a","createElement","react_router_dom","Object","assign","to","_this","props","_this$props","this","icon","primary","secondary","ListItem_default","button","component","ListItemIcon_default","ListItemText_default","inset","React","Component","mainListItems","ListItems_ListItemLink","Dashboard_default","RateReview_default","BarChart_default","Home","Fragment","Typography_default","variant","color","gutterBottom","style","paddingTop","withStyles","theme","loadingIcon","margin","spacing","unit","loading","CircularProgress_default","className","classes","SearchResults","Nominate","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","query","url","searchResults","handleChange","key","e","_this$setState","setState","defineProperty","target","value","debouncedLookupSongs","handleKeyPress","keyCode","handleSubmit","lookupSongs","fetch","concat","encodeURI","then","res","text","console","log","debounce","bind","assertThisInitialized","name","document","addEventListener","removeEventListener","Grid_default","container","direction","justify","alignItems","item","xs","TextField_default","textInput","label","onChange","components_SearchResults","items","width","marginRight","Nominations","List_default","nominees","map","val","App","open","handleDrawerOpen","handleDrawerClose","_this2","root","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","aria-label","onClick","menuButton","menuButtonHidden","Menu_default","noWrap","title","Badge_default","badgeContent","notifications","Notifications_default","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","navList","content","appBarSpacer","react_router","path","exact","render","components_Nominate","addNominee","push","length","components_Nominations","display","paddingRight","objectSpread","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","flexGrow","whiteSpace","overflowX","breakpoints","up","height","overflow","bodyText","marginBottom","tableContainer","h5","&:hover","cursor","Boolean","window","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8796cd22.chunk.js","sourcesContent":["import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\nimport { Link } from \"react-router-dom\";\n\nclass ListItemLink extends React.Component {\n  renderLink = itemProps => <Link to={this.props.to} {...itemProps} />;\n\n  render() {\n    const { icon, primary, secondary } = this.props;\n    return (\n      <li>\n        <ListItem button component={this.renderLink}>\n          {icon && <ListItemIcon>{icon}</ListItemIcon>}\n          <ListItemText inset primary={primary} secondary={secondary} />\n        </ListItem>\n      </li>\n    );\n  }\n}\n\nexport const mainListItems = (\n  <div>\n    <ListItemLink to=\"/\" primary=\"Home\" icon={<DashboardIcon />} />\n    <ListItemLink\n      to=\"/nominate\"\n      primary=\"Nominate a song\"\n      icon={<RateReviewIcon />}\n    />\n    <ListItemLink\n      to=\"/nominations\"\n      primary=\"Current Nominations\"\n      icon={<BarChartIcon />}\n    />\n  </div>\n);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Home() {\n  return (\n    <>\n      <Typography component=\"h3\" variant=\"h3\" color=\"inherit\" gutterBottom>\n        Welcome\n      </Typography>\n      <Typography component=\"div\" style={{ paddingTop: \"24px\" }}>\n        To the left is the menu where you can nominate your favorite song, then\n        see the list of everyone's favorite songs so far\n      </Typography>\n    </>\n  );\n}\nexport default Home;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { withStyles } from \"@material-ui/core/styles\";\n\nconst styles = theme => ({\n  loadingIcon: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nfunction SearchResults(props) {\n  if (props.loading) {\n    return <CircularProgress className={props.classes.loadingIcon} />;\n  }\n  return <Typography component=\"div\">{props.SearchResults}</Typography>;\n}\n\nexport default withStyles(styles)(SearchResults);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { debounce } from \"lodash\";\nimport SearchResults from \"./SearchResults\";\n\nconst styles = theme => ({\n  textInput: {\n    width: theme.spacing.unit * 24,\n    marginRight: theme.spacing.unit * 4\n  },\n  button: {\n    margin: theme.spacing.unit * 2\n  },\n  searchResults: {\n    margin: theme.spacing.unit * 2\n  },\n  loadingIcon: {\n    margin: theme.spacing.unit * 2\n  }\n});\n\nclass Nominate extends React.Component {\n  constructor(props) {\n    super(props);\n    this.debouncedLookupSongs = debounce(this.lookupSongs.bind(this), 500);\n  }\n  state = {\n    query: \"\",\n    url: \"\",\n    loading: false,\n    searchResults: []\n  };\n  componentDidMount() {\n    this.setState({ name: \"\" });\n    document.addEventListener(\"keydown\", this.handleKeyPress);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\n  }\n  handleChange = key => e => {\n    this.setState(\n      { [key]: e.target.value, loading: true },\n      this.debouncedLookupSongs\n    );\n  };\n  handleKeyPress = e => {\n    if (e && e.keyCode === 13) {\n      this.handleSubmit();\n    }\n  };\n  lookupSongs = () => {\n    fetch(`/api/songs?q=${encodeURI(this.state.query)}`)\n      .then(res => res.text())\n      .then(text => {\n        console.log(\"text\", text);\n        this.setState({ loading: false });\n      });\n  };\n  render() {\n    const { classes } = this.props;\n    return (\n      <>\n        <Typography component=\"h3\" variant=\"h3\" color=\"inherit\" gutterBottom>\n          Nominate\n        </Typography>\n        <Grid\n          container\n          direction=\"row\"\n          justify=\"flex-start\"\n          alignItems=\"flex-end\"\n        >\n          <Grid item xs={12}>\n            <TextField\n              className={classes.textInput}\n              label=\"Search\"\n              value={this.state.query}\n              onChange={this.handleChange(\"query\")}\n              margin=\"normal\"\n            />\n          </Grid>\n          <Grid item className={classes.searchResults}>\n            <SearchResults\n              loading={this.state.loading}\n              items={this.state.searchResults}\n            />\n          </Grid>\n        </Grid>\n      </>\n    );\n  }\n}\n\nexport default withStyles(styles)(Nominate);\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport List from \"@material-ui/core/List\";\n\nfunction Nominations(props) {\n  return (\n    <>\n      <Typography component=\"h3\" variant=\"h3\" color=\"inherit\" gutterBottom>\n        Top songs\n      </Typography>\n      <Typography variant=\"h6\">\n        <List>\n          {props.nominees.map(val => {\n            return (\n              <ListItem key={val}>\n                <ListItemText primary={val} />\n              </ListItem>\n            );\n          })}\n        </List>\n      </Typography>\n    </>\n  );\n}\nexport default Nominations;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport List from \"@material-ui/core/List\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport NotificationsIcon from \"@material-ui/icons/Notifications\";\nimport { mainListItems } from \"./components/ListItems\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./components/Home\";\nimport Nominate from \"./components/Nominate\";\nimport Nominations from \"./components/Nominations\";\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: \"flex\"\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: \"none\"\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen\n    })\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing.unit * 7,\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing.unit * 9\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    height: \"100vh\",\n    overflow: \"auto\"\n  },\n  bodyText: {\n    marginBottom: \"24px\"\n  },\n  tableContainer: {\n    height: 320\n  },\n  h5: {\n    marginBottom: theme.spacing.unit * 2\n  },\n  navList: {\n    \"&:hover\": {\n      cursor: \"pointer\"\n    }\n  },\n  notifications: {\n    display: \"none\"\n  }\n});\n\nclass App extends React.Component {\n  state = {\n    open: false,\n    nominees: [\"1. Old Town Road remix ft. Billy Ray Cyrus\", \"2. Old Town Road\"]\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div className={classes.root}>\n        <Router>\n          <CssBaseline />\n          <AppBar\n            position=\"absolute\"\n            className={classNames(\n              classes.appBar,\n              this.state.open && classes.appBarShift\n            )}\n          >\n            <Toolbar\n              disableGutters={!this.state.open}\n              className={classes.toolbar}\n            >\n              <IconButton\n                color=\"inherit\"\n                aria-label=\"Open drawer\"\n                onClick={this.handleDrawerOpen}\n                className={classNames(\n                  classes.menuButton,\n                  this.state.open && classes.menuButtonHidden\n                )}\n              >\n                <MenuIcon />\n              </IconButton>\n              <Typography\n                component=\"h1\"\n                variant=\"h6\"\n                color=\"inherit\"\n                noWrap\n                className={classes.title}\n              >\n                Song of the Summer: 2019\n              </Typography>\n              <IconButton color=\"inherit\">\n                <Badge\n                  badgeContent={0}\n                  color=\"secondary\"\n                  className={classes.notifications}\n                >\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n            </Toolbar>\n          </AppBar>\n          <Drawer\n            variant=\"permanent\"\n            classes={{\n              paper: classNames(\n                classes.drawerPaper,\n                !this.state.open && classes.drawerPaperClose\n              )\n            }}\n            open={this.state.open}\n          >\n            <div className={classes.toolbarIcon}>\n              <IconButton onClick={this.handleDrawerClose}>\n                <ChevronLeftIcon />\n              </IconButton>\n            </div>\n            <Divider />\n            <List className={classes.navList}>{mainListItems}</List>\n          </Drawer>\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Route path=\"/\" exact component={Home} />\n            <Route\n              path=\"/nominate/\"\n              render={props => (\n                <Nominate\n                  {...props}\n                  addNominee={name => {\n                    this.state.nominees.push(\n                      `${this.state.nominees.length + 8}. ${name}`\n                    );\n                  }}\n                />\n              )}\n            />\n            <Route\n              path=\"/nominations/\"\n              render={props => (\n                <Nominations {...props} nominees={this.state.nominees} />\n              )}\n            />\n          </main>\n        </Router>\n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}