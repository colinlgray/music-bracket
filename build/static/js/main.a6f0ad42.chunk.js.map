{"version":3,"sources":["components/ListItems.js","components/Home.js","components/SearchResults.js","components/Nominate.js","components/Nominations.js","App.js","serviceWorker.js","index.js"],"names":["ListItemLink","renderLink","itemProps","react_default","a","createElement","react_router_dom","Object","assign","to","_this","props","_this$props","this","icon","primary","secondary","ListItem_default","button","component","ListItemIcon_default","ListItemText_default","inset","React","Component","mainListItems","ListItems_ListItemLink","Dashboard_default","RateReview_default","BarChart_default","Home","Fragment","Typography_default","variant","color","gutterBottom","style","paddingTop","withStyles","theme","loadingIcon","margin","spacing","unit","_ref","loading","_ref$items","items","classes","CircularProgress_default","className","map","i","key","id","name","Nominate","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","query","url","searchResults","handleChange","e","_this$setState","setState","defineProperty","target","value","debouncedLookupSongs","handleKeyPress","keyCode","lookupSongs","fetch","concat","encodeURI","then","res","json","response","totalResults","total","catch","err","console","error","searchError","debounce","bind","assertThisInitialized","document","addEventListener","removeEventListener","Grid_default","container","direction","justify","alignItems","item","xs","TextField_default","textInput","label","onChange","components_SearchResults","width","marginRight","Nominations","List_default","nominees","val","App","open","handleDrawerOpen","handleDrawerClose","_this2","root","CssBaseline_default","AppBar_default","position","classNames","appBar","appBarShift","Toolbar_default","disableGutters","toolbar","IconButton_default","aria-label","onClick","menuButton","menuButtonHidden","Menu_default","noWrap","title","Drawer_default","paper","drawerPaper","drawerPaperClose","toolbarIcon","ChevronLeft_default","Divider_default","navList","content","appBarSpacer","react_router","path","exact","render","components_Nominate","addNominee","push","length","components_Nominations","display","paddingRight","objectSpread","justifyContent","padding","mixins","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","marginLeft","enteringScreen","flexGrow","whiteSpace","overflowX","breakpoints","up","height","overflow","bodyText","marginBottom","tableContainer","h5","&:hover","cursor","Boolean","window","location","hostname","match","ReactDOM","src_App","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a6f0ad42.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\r\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\r\nimport RateReviewIcon from \"@material-ui/icons/RateReview\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass ListItemLink extends React.Component {\r\n  renderLink = itemProps => <Link to={this.props.to} {...itemProps} />;\r\n\r\n  render() {\r\n    const { icon, primary, secondary } = this.props;\r\n    return (\r\n      <li>\r\n        <ListItem button component={this.renderLink}>\r\n          {icon && <ListItemIcon>{icon}</ListItemIcon>}\r\n          <ListItemText inset primary={primary} secondary={secondary} />\r\n        </ListItem>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport const mainListItems = (\r\n  <div>\r\n    <ListItemLink to=\"/\" primary=\"Home\" icon={<DashboardIcon />} />\r\n    <ListItemLink\r\n      to=\"/nominate\"\r\n      primary=\"Nominate a song\"\r\n      icon={<RateReviewIcon />}\r\n    />\r\n    <ListItemLink\r\n      to=\"/nominations\"\r\n      primary=\"Current Nominations\"\r\n      icon={<BarChartIcon />}\r\n    />\r\n  </div>\r\n);\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <>\r\n      <Typography component=\"h3\" variant=\"h3\" color=\"inherit\" gutterBottom>\r\n        Welcome\r\n      </Typography>\r\n      <Typography component=\"div\" style={{ paddingTop: \"24px\" }}>\r\n        To the left is the menu where you can nominate your favorite song, then\r\n        see the list of everyone's favorite songs so far\r\n      </Typography>\r\n    </>\r\n  );\r\n}\r\nexport default Home;\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\n\r\nconst styles = theme => ({\r\n  loadingIcon: {\r\n    margin: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nfunction SearchResults({ loading, items = [], classes }) {\r\n  if (loading) {\r\n    return <CircularProgress className={classes.loadingIcon} />;\r\n  }\r\n  return (\r\n    <Typography component=\"div\">\r\n      {items.map(i => {\r\n        return (\r\n          <ListItem key={i.id}>\r\n            <ListItemText primary={i.name} />\r\n          </ListItem>\r\n        );\r\n      })}\r\n    </Typography>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(SearchResults);\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport { debounce } from \"lodash\";\r\nimport SearchResults from \"./SearchResults\";\r\n\r\nconst styles = theme => ({\r\n  textInput: {\r\n    width: theme.spacing.unit * 24,\r\n    marginRight: theme.spacing.unit * 4\r\n  },\r\n  button: {\r\n    margin: theme.spacing.unit * 2\r\n  },\r\n  searchResults: {\r\n    margin: theme.spacing.unit * 2\r\n  },\r\n  loadingIcon: {\r\n    margin: theme.spacing.unit * 2\r\n  }\r\n});\r\n\r\nclass Nominate extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.debouncedLookupSongs = debounce(this.lookupSongs.bind(this), 500);\r\n  }\r\n  state = {\r\n    query: \"\",\r\n    url: \"\",\r\n    loading: false,\r\n    searchResults: []\r\n  };\r\n  componentDidMount() {\r\n    this.setState({ name: \"\" });\r\n    document.addEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"keydown\", this.handleKeyPress);\r\n  }\r\n  handleChange = key => e => {\r\n    this.setState(\r\n      { [key]: e.target.value, loading: true },\r\n      this.debouncedLookupSongs\r\n    );\r\n  };\r\n  handleKeyPress = e => {\r\n    if (e && e.keyCode === 13) {\r\n      // this.handleSubmit();\r\n    }\r\n  };\r\n  lookupSongs = () => {\r\n    fetch(`/api/songs?q=${encodeURI(this.state.query)}`)\r\n      .then(res => res.json())\r\n      .then(response => {\r\n        this.setState({\r\n          loading: false,\r\n          searchResults: response.items,\r\n          totalResults: response.total\r\n        });\r\n      })\r\n      .catch(err => {\r\n        console.error(err);\r\n        this.setState({ searchError: err });\r\n      });\r\n  };\r\n  render() {\r\n    const { classes } = this.props;\r\n    return (\r\n      <>\r\n        <Typography component=\"h3\" variant=\"h3\" color=\"inherit\" gutterBottom>\r\n          Nominate\r\n        </Typography>\r\n        <Grid\r\n          container\r\n          direction=\"row\"\r\n          justify=\"flex-start\"\r\n          alignItems=\"flex-end\"\r\n        >\r\n          <Grid item xs={12}>\r\n            <TextField\r\n              className={classes.textInput}\r\n              label=\"Search\"\r\n              value={this.state.query}\r\n              onChange={this.handleChange(\"query\")}\r\n              margin=\"normal\"\r\n            />\r\n          </Grid>\r\n          <Grid item className={classes.searchResults}>\r\n            <SearchResults\r\n              loading={this.state.loading}\r\n              items={this.state.searchResults}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withStyles(styles)(Nominate);\r\n","import React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport List from \"@material-ui/core/List\";\r\n\r\nfunction Nominations(props) {\r\n  return (\r\n    <>\r\n      <Typography component=\"h3\" variant=\"h3\" color=\"inherit\" gutterBottom>\r\n        Top songs\r\n      </Typography>\r\n      <Typography variant=\"h6\">\r\n        <List>\r\n          {props.nominees.map(val => {\r\n            return (\r\n              <ListItem key={val}>\r\n                <ListItemText primary={val} />\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      </Typography>\r\n    </>\r\n  );\r\n}\r\nexport default Nominations;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport classNames from \"classnames\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport List from \"@material-ui/core/List\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Divider from \"@material-ui/core/Divider\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\r\nimport { mainListItems } from \"./components/ListItems\";\r\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport Nominate from \"./components/Nominate\";\r\nimport Nominations from \"./components/Nominations\";\r\n\r\nconst drawerWidth = 240;\r\n\r\nconst styles = theme => ({\r\n  root: {\r\n    display: \"flex\"\r\n  },\r\n  toolbar: {\r\n    paddingRight: 24 // keep right padding when drawer closed\r\n  },\r\n  toolbarIcon: {\r\n    display: \"flex\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"flex-end\",\r\n    padding: \"0 8px\",\r\n    ...theme.mixins.toolbar\r\n  },\r\n  appBar: {\r\n    zIndex: theme.zIndex.drawer + 1,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    })\r\n  },\r\n  appBarShift: {\r\n    marginLeft: drawerWidth,\r\n    width: `calc(100% - ${drawerWidth}px)`,\r\n    transition: theme.transitions.create([\"width\", \"margin\"], {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  menuButton: {\r\n    marginLeft: 12,\r\n    marginRight: 36\r\n  },\r\n  menuButtonHidden: {\r\n    display: \"none\"\r\n  },\r\n  title: {\r\n    flexGrow: 1\r\n  },\r\n  drawerPaper: {\r\n    position: \"relative\",\r\n    whiteSpace: \"nowrap\",\r\n    width: drawerWidth,\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.enteringScreen\r\n    })\r\n  },\r\n  drawerPaperClose: {\r\n    overflowX: \"hidden\",\r\n    transition: theme.transitions.create(\"width\", {\r\n      easing: theme.transitions.easing.sharp,\r\n      duration: theme.transitions.duration.leavingScreen\r\n    }),\r\n    width: theme.spacing.unit * 7,\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      width: theme.spacing.unit * 9\r\n    }\r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  content: {\r\n    flexGrow: 1,\r\n    padding: theme.spacing.unit * 3,\r\n    height: \"100vh\",\r\n    overflow: \"auto\"\r\n  },\r\n  bodyText: {\r\n    marginBottom: \"24px\"\r\n  },\r\n  tableContainer: {\r\n    height: 320\r\n  },\r\n  h5: {\r\n    marginBottom: theme.spacing.unit * 2\r\n  },\r\n  navList: {\r\n    \"&:hover\": {\r\n      cursor: \"pointer\"\r\n    }\r\n  }\r\n});\r\n\r\nclass App extends React.Component {\r\n  state = {\r\n    open: false,\r\n    nominees: [\"1. Old Town Road remix ft. Billy Ray Cyrus\", \"2. Old Town Road\"]\r\n  };\r\n\r\n  handleDrawerOpen = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleDrawerClose = () => {\r\n    this.setState({ open: false });\r\n  };\r\n\r\n  render() {\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <Router>\r\n          <CssBaseline />\r\n          <AppBar\r\n            position=\"absolute\"\r\n            className={classNames(\r\n              classes.appBar,\r\n              this.state.open && classes.appBarShift\r\n            )}\r\n          >\r\n            <Toolbar\r\n              disableGutters={!this.state.open}\r\n              className={classes.toolbar}\r\n            >\r\n              <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"Open drawer\"\r\n                onClick={this.handleDrawerOpen}\r\n                className={classNames(\r\n                  classes.menuButton,\r\n                  this.state.open && classes.menuButtonHidden\r\n                )}\r\n              >\r\n                <MenuIcon />\r\n              </IconButton>\r\n              <Typography\r\n                component=\"h1\"\r\n                variant=\"h6\"\r\n                color=\"inherit\"\r\n                noWrap\r\n                className={classes.title}\r\n              >\r\n                Song of the Summer: 2019\r\n              </Typography>\r\n            </Toolbar>\r\n          </AppBar>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            classes={{\r\n              paper: classNames(\r\n                classes.drawerPaper,\r\n                !this.state.open && classes.drawerPaperClose\r\n              )\r\n            }}\r\n            open={this.state.open}\r\n          >\r\n            <div className={classes.toolbarIcon}>\r\n              <IconButton onClick={this.handleDrawerClose}>\r\n                <ChevronLeftIcon />\r\n              </IconButton>\r\n            </div>\r\n            <Divider />\r\n            <List className={classes.navList}>{mainListItems}</List>\r\n          </Drawer>\r\n          <main className={classes.content}>\r\n            <div className={classes.appBarSpacer} />\r\n            <Route path=\"/\" exact component={Home} />\r\n            <Route\r\n              path=\"/nominate/\"\r\n              render={props => (\r\n                <Nominate\r\n                  {...props}\r\n                  addNominee={name => {\r\n                    this.state.nominees.push(\r\n                      `${this.state.nominees.length + 8}. ${name}`\r\n                    );\r\n                  }}\r\n                />\r\n              )}\r\n            />\r\n            <Route\r\n              path=\"/nominations/\"\r\n              render={props => (\r\n                <Nominations {...props} nominees={this.state.nominees} />\r\n              )}\r\n            />\r\n          </main>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(App);\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}